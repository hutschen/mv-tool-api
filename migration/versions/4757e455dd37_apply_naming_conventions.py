"""apply naming conventions

Revision ID: 4757e455dd37
Revises: ab13bba14886
Create Date: 2022-10-08 15:14:35.002390

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "4757e455dd37"
down_revision = "aaf70fa9151e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # inspect database and get table_names
    inspector = sa.inspect(op.get_bind())

    for table_name in inspector.get_table_names():
        with op.batch_alter_table(table_name, schema=None) as batch_op:

            # rename foreign key constraints using naming convention
            for fk_info in inspector.get_foreign_keys(table_name):
                batch_op.drop_constraint(fk_info["name"], "foreignkey")
                batch_op.create_foreign_key(
                    None,
                    fk_info["referred_table"],
                    [fk_info["constrained_columns"][0]],
                    [fk_info["referred_columns"][0]],
                )

            # rename primary key constraint using naming convention
            pk_info = inspector.get_pk_constraint(table_name)
            batch_op.drop_constraint(pk_info["name"], type_="primary")
            batch_op.create_primary_key(None, pk_info["constrained_columns"])


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
